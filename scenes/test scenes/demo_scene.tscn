[gd_scene load_steps=21 format=3 uid="uid://bemdui8jvt388"]

[ext_resource type="Script" path="res://addons/Interactable/src/Types/Pickups/nodes/PickupArea3D.cs" id="1_k7j6p"]
[ext_resource type="Script" path="res://addons/Interactable/src/Types/Pickups/resources/Pickup.cs" id="2_57b1t"]
[ext_resource type="Script" path="res://addons/Interactable/src/Types/Pickups/nodes/PickupCollectorArea3D.cs" id="3_1uvuq"]
[ext_resource type="Script" path="res://addons/Interactable/src/Types/Damage/nodes/HitArea3D.cs" id="4_1ud3r"]
[ext_resource type="Script" path="res://addons/Interactable/src/Types/Damage/nodes/Hitscan3D.cs" id="5_thpwx"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_s7n4f"]
sky_top_color = Color(0.290196, 0.435294, 0.752941, 1)
sky_horizon_color = Color(0.737255, 0.643137, 0.458824, 1)
sky_curve = 0.121838

[sub_resource type="Sky" id="Sky_s37ag"]
sky_material = SubResource("ProceduralSkyMaterial_s7n4f")
radiance_size = 2

[sub_resource type="Environment" id="Environment_v8ecq"]
background_mode = 2
sky = SubResource("Sky_s37ag")
ambient_light_source = 3
reflected_light_source = 2
tonemap_mode = 2
fog_sky_affect = 0.01
volumetric_fog_density = 0.0144

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_ghnhh"]

[sub_resource type="QuadMesh" id="QuadMesh_iu66s"]

[sub_resource type="BoxMesh" id="BoxMesh_a1dwg"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_gt7lp"]
albedo_color = Color(1, 0.321569, 1, 1)

[sub_resource type="Animation" id="Animation_0adfd"]
resource_name = "PickupAnimation"
length = 4.0
step = 1.0
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0, 0, 0, 0, 0),
"points": PackedFloat32Array(2.08165e-12, -0.25, 0, 0.25, 0, 2.08165e-12, -0.25, 0, 0.25, 0, 2.08165e-12, -0.25, 0, 0.25, 0, 2.08165e-12, -0.25, 0, 0.25, 0, 2.08165e-12, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 1, 2, 3, 4)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:position:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0, 0, 0, 0, 0),
"points": PackedFloat32Array(0.52, -0.25, 0, 0.25, 0, 0.78, -0.25, 0, 0.25, 0, 1.25, -0.25, 0, 0.25, 0, 1.91, -0.25, 0, 0.25, 0, 2.6, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 1, 2, 3, 4)
}
tracks/2/type = "bezier"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".:position:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"handle_modes": PackedInt32Array(0, 0, 0, 0, 0),
"points": PackedFloat32Array(2.08165e-12, -0.25, 0, 0.25, 0, 2.08165e-12, -0.25, 0, 0.25, 0, 2.08165e-12, -0.25, 0, 0.25, 0, 2.08165e-12, -0.25, 0, 0.25, 0, 2.08165e-12, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 1, 2, 3, 4)
}
tracks/3/type = "method"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(4),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"queue_free"
}]
}
tracks/4/type = "bezier"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath(".:rotation:x")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"handle_modes": PackedInt32Array(0, 0, 0, 0),
"points": PackedFloat32Array(3.48787e-16, -0.25, 0, 0.25, 0, 3.48787e-16, -0.25, 0, 0.25, 0, 3.48787e-16, -0.25, 0, 0.25, 0, 3.48787e-16, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(1, 2, 3, 4)
}
tracks/5/type = "bezier"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath(".:rotation:y")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"handle_modes": PackedInt32Array(0, 0, 0, 0),
"points": PackedFloat32Array(0.296706, -0.25, 0, 0.25, 0, 0.994838, -0.25, 0, 0.25, 0, 2.77507, -0.25, 0, 0.25, 0, 4.88692, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(1, 2, 3, 4)
}
tracks/6/type = "bezier"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath(".:rotation:z")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"handle_modes": PackedInt32Array(0, 0, 0, 0),
"points": PackedFloat32Array(3.48787e-16, -0.25, 0, 0.25, 0, 3.48787e-16, -0.25, 0, 0.25, 0, 3.48787e-16, -0.25, 0, 0.25, 0, 3.48787e-16, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(1, 2, 3, 4)
}
tracks/7/type = "bezier"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath(".:scale:x")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"handle_modes": PackedInt32Array(0, 0, 0),
"points": PackedFloat32Array(1, -0.25, 0, 0.25, 0, 0.71, -0.25, 0, 0.25, 0, 0.12, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 3, 4)
}
tracks/8/type = "bezier"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath(".:scale:y")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"handle_modes": PackedInt32Array(0, 0, 0),
"points": PackedFloat32Array(1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 3, 4)
}
tracks/9/type = "bezier"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath(".:scale:z")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"handle_modes": PackedInt32Array(0, 0, 0),
"points": PackedFloat32Array(1, -0.25, 0, 0.25, 0, 0.68, -0.25, 0, 0.25, 0, 0.17, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 3, 4)
}

[sub_resource type="Animation" id="Animation_8kv6g"]
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:position:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0.489704, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/2/type = "bezier"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".:position:z")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/3/type = "bezier"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath(".:rotation:x")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(3.48787e-16, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/4/type = "bezier"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath(".:rotation:y")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0.296706, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/5/type = "bezier"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath(".:rotation:z")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(3.48787e-16, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/6/type = "bezier"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath(".:scale:x")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0.71, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/7/type = "bezier"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath(".:scale:y")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(1, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/8/type = "bezier"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath(".:scale:z")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0.68, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_8tkyo"]
_data = {
"PickupAnimation": SubResource("Animation_0adfd"),
"RESET": SubResource("Animation_8kv6g")
}

[sub_resource type="Resource" id="Resource_deqoi"]
script = ExtResource("2_57b1t")
Amount = 3

[sub_resource type="BoxShape3D" id="BoxShape3D_tx6rq"]

[sub_resource type="SphereShape3D" id="SphereShape3D_wv5xn"]

[sub_resource type="BoxShape3D" id="BoxShape3D_gf45m"]

[sub_resource type="SphereShape3D" id="SphereShape3D_i8p5g"]

[node name="DemoScene" type="Node3D"]

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.53114, 0.0744641, 0.844006, -0.568963, 0.769471, 0.290165, -0.627831, -0.634326, 0.451064, 2.43822, 1.78244, 0)
light_color = Color(0.843137, 0.717647, 0.411765, 1)
shadow_enabled = true
directional_shadow_mode = 1

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_v8ecq")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.999739, 0.0228618, 0, -0.0228618, 0.999739, 0, 1.05076, 3.72021)

[node name="StaticBody3D2" type="StaticBody3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="StaticBody3D2"]
shape = SubResource("WorldBoundaryShape3D_ghnhh")

[node name="CSGMesh3D" type="CSGMesh3D" parent="StaticBody3D2"]
transform = Transform3D(16.69, -1.16425e-14, -2.54455e-22, -2.54455e-22, -7.29543e-07, 16.69, -1.16425e-14, -16.69, -7.29543e-07, 0, 0, 0)
mesh = SubResource("QuadMesh_iu66s")

[node name="CSGMesh3D" type="CSGMesh3D" parent="."]
transform = Transform3D(0.678976, -2.31571e-16, 0.198813, 2.47639e-16, 1, -2.37175e-16, -0.207584, 4.35522e-16, 0.650287, 0, 0.489704, 0)
mesh = SubResource("BoxMesh_a1dwg")
material = SubResource("StandardMaterial3D_gt7lp")

[node name="AnimationPlayer" type="AnimationPlayer" parent="CSGMesh3D"]
speed_scale = 10.0
libraries = {
"": SubResource("AnimationLibrary_8tkyo")
}

[node name="PickupArea3D" type="Area3D" parent="CSGMesh3D" node_paths=PackedStringArray("Animator")]
script = ExtResource("1_k7j6p")
Pickup = SubResource("Resource_deqoi")
Animator = NodePath("../AnimationPlayer")
AnimationOnAccepted = &"PickupAnimation"

[node name="CollisionShape3D" type="CollisionShape3D" parent="CSGMesh3D/PickupArea3D"]
shape = SubResource("BoxShape3D_tx6rq")

[node name="Ball" type="RigidBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0693785, 2.62758, 0.0649852)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Ball"]
shape = SubResource("SphereShape3D_wv5xn")

[node name="CSGSphere3D" type="CSGSphere3D" parent="Ball"]

[node name="PickupCollectorArea3D" type="Area3D" parent="Ball"]
script = ExtResource("3_1uvuq")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Ball/PickupCollectorArea3D"]
shape = SubResource("BoxShape3D_gf45m")

[node name="HitArea3D" type="Area3D" parent="Ball" node_paths=PackedStringArray("ReplyNode", "HitBody")]
collision_layer = 2
collision_mask = 2
script = ExtResource("4_1ud3r")
ReplyNode = NodePath("..")
HitBody = NodePath("..")
ImpulseMultipler = 3.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="Ball/HitArea3D"]
shape = SubResource("SphereShape3D_i8p5g")

[node name="Hitscan3D" type="RayCast3D" parent="."]
transform = Transform3D(0.0304668, 0.213811, -0.9764, 0.0033694, 0.976826, 0.21401, 0.99953, -0.00981008, 0.0290404, -2.70426, 0.951189, 0.110198)
target_position = Vector3(2.08165e-12, 2.08165e-12, -10)
collision_mask = 2
debug_shape_thickness = 4
script = ExtResource("5_thpwx")
Range = 20.0
